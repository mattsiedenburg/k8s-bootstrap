- hosts: all
  become: yes
  tasks:
    - name: Uninstall old versions of docker
      apt:
        name: ['docker', 'docker-engine', 'docker.io', 'containerd', 'runc']
        state: absent
        autoremove: yes
        purge: yes
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=arm64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
        state: present
    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce=5:19.03.11~3-0~ubuntu-{{ ansible_distribution_release | lower }}
        - docker-ce-cli=5:19.03.11~3-0~ubuntu-{{ ansible_distribution_release | lower }}
        - containerd.io=1.2.13-2
    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        group: docker
    - name: Hold versions for docker-ce
      dpkg_selections:
        name: docker-ce
        selection: hold
    - name: Hold versions for docker-ce-cli
      dpkg_selections:
        name: docker-ce-cli
        selection: hold
    - name: Hold versions for containerd.io
      dpkg_selections:
        name: containerd.io
        selection: hold
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
    - name: Hold versions for kubelet
      dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold versions for kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold versions for kubectl
      dpkg_selections:
        name: kubectl
        selection: hold
    - name: Add netbridge config ip6
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.bridge.bridge-nf-call-ip6tables = 1'
        state: present
        create: yes
    - name: Add netbridge config ip4
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.bridge.bridge-nf-call-iptables = 1'
        state: present
        create: yes
    - name: update sysctl
      command: sysctl --system
    - name: Add memory cgroup config to boot params
      replace:
        path: /boot/firmware/cmdline.txt
        regexp: '(fixrtc)$'
        replace: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
